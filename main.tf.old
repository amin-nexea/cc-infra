# Service account for the Compute Engine instance
resource "google_service_account" "cultcreative_instance_sa" {
  account_id   = "cultcreative-instance-sa"
  display_name = "CultCreative Instance Service Account"
  depends_on   = [time_sleep.wait_30_seconds]
}

resource "google_secret_manager_secret" "cultcreative_database_secrets" {
  for_each  = toset(["db-user", "db-password", "db-host", "db-name"])
  secret_id = each.key
  
  replication {
    auto {
      // This block enables automatic replication
    }
  }

  depends_on   = [time_sleep.wait_30_seconds]
}

resource "google_secret_manager_secret_version" "cultcreative_database_secrets" {
  for_each = google_secret_manager_secret.cultcreative_database_secrets
  secret   = each.value.id
  secret_data = (
    each.key == "db-host" ? google_sql_database_instance.cultcreative_database_instance.public_ip_address :
    each.key == "db-user" ? var.cultcreative_database_user :
    each.key == "db-password" ? var.cultcreative_database_password :
    var.cultcreative_database_name
  )
}

resource "google_secret_manager_secret_iam_member" "cultcreative_database_secrets_access" {
  for_each  = google_secret_manager_secret.cultcreative_database_secrets
  secret_id = each.value.id
  role      = "roles/secretmanager.secretAccessor"
  member    = "serviceAccount:${google_service_account.cultcreative_instance_sa.email}"
}

# Grant the service account access to Secret Manager
resource "google_project_iam_member" "secret_accessor" {
  project = "my-project-nexea"
  role    = "roles/secretmanager.secretAccessor"
  member  = "serviceAccount:${google_service_account.cultcreative_instance_sa.email}"
}

# Compute Engine instance
resource "google_compute_instance" "cultcreative_instance" {
  name         = "cultcreative-instance"
  machine_type = "e2-medium" 
  zone         = "asia-southeast1-a"

  boot_disk {
    initialize_params {
      image = "ubuntu-os-cloud/ubuntu-2004-lts"
      size  = 30  # 10 GB
      type  = "pd-ssd"
    }
  }

  network_interface {
    network = google_compute_network.cultcreative_vpc_network.name
    access_config {
      // Ephemeral public IP
    }
  }

  metadata = {
    nginx-config = filebase64("${path.module}/nginx/default.conf")
    nginx-dockerfile = filebase64("${path.module}/nginx/Dockerfile")
    docker-compose = filebase64("${path.module}/docker-compose.yml")
  }

  metadata_startup_script = file("startup-script.sh")

  tags = ["http-server", "https-server", "ssh"]

  service_account {
    email  = google_service_account.cultcreative_instance_sa.email
    scopes = ["cloud-platform"]
  }

  depends_on   = [time_sleep.wait_30_seconds, google_service_account.cultcreative_instance_sa, google_secret_manager_secret.cultcreative_database_secrets, google_secret_manager_secret_version.cultcreative_database_secrets, google_secret_manager_secret_iam_member.cultcreative_database_secrets_access, google_project_iam_member.secret_accessor ]

  deletion_protection = false
}


# Firewall rule to allow SSH, HTTP, and HTTPS traffic
resource "google_compute_firewall" "cultcreative_firewall_allow_ssh_http_https" {
  name    = "cultcreative-firewall-allow-ssh-http-https"
  network = google_compute_network.cultcreative_vpc_network.name

  allow {
    protocol = "tcp"
    ports    = ["22", "80", "443"]
  }

  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["http-server", "https-server", "ssh"]
}










